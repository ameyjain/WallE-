//
//  UIColor+Project.swift
//
//  Generated by Zeplin on 5/30/17.
//  Copyright (c) 2017 __MyCompanyName__. All rights reserved. 
//

import UIKit

extension UIColor
{
    //MARK: - Init
    convenience init(red: Int, green: Int, blue: Int, transparency: CGFloat = 1)
    {
        assert(red >= 0 && red <= 255, "Invalid red component")
        assert(green >= 0 && green <= 255, "Invalid green component")
        assert(blue >= 0 && blue <= 255, "Invalid blue component")
        
        var trans: CGFloat
        {
            if transparency > 1
            {
                return 1
            }
            else if transparency < 0
            {
                return 0
            }
            else
            {
                return transparency
            }
        }
        self.init(red: CGFloat(red) / 255.0, green: CGFloat(green) / 255.0, blue: CGFloat(blue) / 255.0, alpha: trans)
    }
    
    /// Create UIColor from hexadecimal value with optional transparency.
    ///
    /// - Parameters:
    ///   - hex: hex Int (example: 0xDECEB5).
    ///   - transparency: optional transparency value (default is 1).
    public convenience init(hex: Int, transparency: CGFloat = 1) {
        var trans: CGFloat {
            if transparency > 1 {
                return 1
            } else if transparency < 0 {
                return 0
            } else {
                return transparency
            }
        }
        self.init(red:(hex >> 16) & 0xff, green:(hex >> 8) & 0xff, blue:hex & 0xff, transparency: trans)
    }
    
    // MARK: App Partner Color Styles
    
    class var mainColor: UIColor {
        return self.denimBlue
    }
    
    class var secondaryColor: UIColor {
        return self.tomato
    }
    
    // MARK: Zeplin Color Styles
    
	class var denimBlue: UIColor {
		return UIColor(red: 59.0 / 255.0, green: 89.0 / 255.0, blue: 152.0 / 255.0, alpha: 1.0)
	}

	class var tomato: UIColor {
		return UIColor(red: 230.0 / 255.0, green: 61.0 / 255.0, blue: 50.0 / 255.0, alpha: 1.0)
	}

	class var greyishBrown: UIColor { 
		return UIColor(white: 63.0 / 255.0, alpha: 1.0)
	}
}

extension CGColor {
    
    /// SwifterSwift: UIColor.
    public var uiColor: UIColor? {
        return UIColor(cgColor: self)
    }
}
